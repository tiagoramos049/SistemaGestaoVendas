@model SistemaGestaoVendas.AutoMapper.ConciliacaoViewModel

<h2>Conciliação de Contas</h2>

<form asp-action="ConciliacaoContas" enctype="multipart/form-data" method="post">
    <div class="form-group">
        <label for="arquivoExtrato">Selecione o arquivo do extrato bancário:</label>
        <input type="file" name="arquivoExtrato" id="arquivoExtrato" class="form-control-file">
    </div>
    <button type="submit" class="btn btn-primary">Importar Extrato</button>
</form>

<table class="table table-bordered">
    <tr>
        <th>Saldo Pagar</th>
        <th>Saldo Receber</th>
        <th>Saldo Total</th>
    </tr>
    @{
        int maxIterations = Math.Max(Model.ContasAPagar.Count(), Model.ContasAReceber.Count());
        for (int i = 0; i < maxIterations; i++)
        {
            <tr>
                <td>
                    @if (i < Model.ContasAPagar.Count())
                    {
                        var contaPagar = Model.ContasAPagar.ElementAt(i);
                        <span style="color: red;">@contaPagar.Valor</span> @contaPagar.Favorecido
                    }
                
                    <br />
                    @if (i < Model.ContasAReceber.Count())
                    {
                        var contaReceber = Model.ContasAReceber.ElementAt(i);
                        <span style="color: green;">@contaReceber.Valor</span> @contaReceber.Favorecido
                    }
                </td>
                <td>
                    @{
                        var saldoTotalPagar = i < Model.ContasAPagar.Count() ? Model.ContasAPagar.Take(i + 1).Sum(cp => cp.Valor) : 0;
                        var saldoTotalReceber = i < Model.ContasAReceber.Count() ? Model.ContasAReceber.Take(i + 1).Sum(cr => cr.Valor) : 0;
                        var saldoTotal = saldoTotalReceber - saldoTotalPagar;
                    }
                    @saldoTotal
                </td>
            </tr>
        }
    }
</table>

